/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.systemAdminRole;

import business.Enterprise.Enterprise;
import business.Organization.Organization;
import business.business.Business;
import business.network.Network;
import business.userAccounts.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Rachita
 */
public class SystemAdministratorWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdministratorWorkArea
     */
    JPanel userProcessContainer;
    private Business business;
    private UserAccount user;
    public SystemAdministratorWorkArea(JPanel userProcessContainer, UserAccount user, Business business) {
        initComponents();
        this.business = business;
        this.userProcessContainer = userProcessContainer;
        this.user=user;
        nameJLabel.setText("Welcome " + user.getEmployee().getName());
    }

    private void populateTree() {
        DefaultTreeModel dtm = (DefaultTreeModel) systemJTree.getModel();
        ArrayList<Network> networkList = business.getNetworkList();
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;

        DefaultMutableTreeNode countries = new DefaultMutableTreeNode("Countries");
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) dtm.getRoot();
        root.insert(countries, 0);

        Network network;
        Network stateNetwork = null;
        Network cityNetwork = null;
        Enterprise enterprise;
        Organization organization;
        DefaultMutableTreeNode countryNode;
        DefaultMutableTreeNode stateNode = null;
        DefaultMutableTreeNode cityNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        ArrayList<Network> stateNetworkList;
        ArrayList<Network> cityNetworkList;

        for (int i = 0; i < networkList.size(); i++) {
            network = networkList.get(i);
            countryNode = new DefaultMutableTreeNode(network.getCountry());
            countries.insert(countryNode, i);
            System.out.println("countryNode"  + countryNode);
                
            stateNetworkList = network.getNetWorkList();
            for (int l = 0; l < stateNetworkList.size(); l++) {
                stateNetwork = stateNetworkList.get(l);
                stateNode = new DefaultMutableTreeNode(stateNetwork.getState());
                countryNode.insert(stateNode,l);
                System.out.println("stateNode" + stateNode);
                
                cityNetworkList=stateNetwork.getNetWorkList();
                for (int m = 0; m < cityNetworkList.size(); m++) {
                        cityNetwork = cityNetworkList.get(m);
                        cityNode = new DefaultMutableTreeNode(cityNetwork.getCity());
                        stateNode.insert(cityNode, m);
                    System.out.println("cityNode" + cityNode);
            
            enterpriseList = network.getEnterpriseDirectory().getEnterpriseList();
            for (int j = 0; j < enterpriseList.size(); j++) {
                enterprise = enterpriseList.get(j);
                enterpriseNode = new DefaultMutableTreeNode(enterprise.getName());
                countryNode.insert(enterpriseNode, j);
                System.out.println("enterpriseNode" + enterpriseNode);
                organizationList = enterprise.getOrganizationDirectory().getOrganizationList();
                for (int k = 0; k < organizationList.size(); k++) {
                    organization = organizationList.get(k);
                    organizationNode = new DefaultMutableTreeNode(organization.getName());
                    enterpriseNode.insert(organizationNode, k);
                    System.out.println("organizationNode" + organizationNode);
                }
            }
                }
            }

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        systemJTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        btnManageNetworks = new javax.swing.JButton();
        btnManageCDCs = new javax.swing.JButton();
        btnManageUsers = new javax.swing.JButton();
        btnManagevaccines = new javax.swing.JButton();
        btnManageDisease = new javax.swing.JButton();
        nameJLabel = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("System");
        systemJTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        systemJTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                systemJTreeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(systemJTree);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnManageNetworks.setBackground(new java.awt.Color(255, 255, 255));
        btnManageNetworks.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManageNetworks.setText("Manage Locations");
        btnManageNetworks.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        btnManageNetworks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageNetworksActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageNetworks, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 220, 370, 30));

        btnManageCDCs.setBackground(new java.awt.Color(255, 255, 255));
        btnManageCDCs.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManageCDCs.setText("Manage Center of Disease Control Networks");
        btnManageCDCs.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        btnManageCDCs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCDCsActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageCDCs, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 370, 30));

        btnManageUsers.setBackground(new java.awt.Color(255, 255, 255));
        btnManageUsers.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManageUsers.setText("Manage Center of Disease Control Admin Accounts");
        btnManageUsers.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        btnManageUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageUsersActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 370, 30));

        btnManagevaccines.setBackground(new java.awt.Color(255, 255, 255));
        btnManagevaccines.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManagevaccines.setText("Manage Vaccine Catalog");
        btnManagevaccines.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        btnManagevaccines.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManagevaccinesActionPerformed(evt);
            }
        });
        jPanel2.add(btnManagevaccines, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 370, 30));

        btnManageDisease.setBackground(new java.awt.Color(255, 255, 255));
        btnManageDisease.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnManageDisease.setText("Manage Disease Catalog");
        btnManageDisease.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.cyan, null));
        btnManageDisease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageDiseaseActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageDisease, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 420, 370, 30));

        nameJLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        nameJLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(nameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 420, 40));

        jSplitPane1.setRightComponent(jPanel2);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageNetworksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageNetworksActionPerformed
        ManageNetworksJPanel panel = new ManageNetworksJPanel(userProcessContainer, business);
        userProcessContainer.add("ManageNetworksJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_btnManageNetworksActionPerformed

    private void systemJTreeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_systemJTreeValueChanged
        populateTree();
    }//GEN-LAST:event_systemJTreeValueChanged

    private void btnManageCDCsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCDCsActionPerformed
        ManageCDCJPanel panel = new ManageCDCJPanel(userProcessContainer,business);
        userProcessContainer.add("ManageEnterpriseJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageCDCsActionPerformed

    private void btnManagevaccinesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManagevaccinesActionPerformed
       ManageVaccineJPanel panel = new ManageVaccineJPanel(userProcessContainer,business);
       userProcessContainer.add("ManageVaccineJPanel",panel);
       CardLayout layout = (CardLayout) userProcessContainer.getLayout();
       layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManagevaccinesActionPerformed

    private void btnManageDiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageDiseaseActionPerformed
        ManageDiseaseJPanel panel = new ManageDiseaseJPanel(userProcessContainer,business);
        userProcessContainer.add("ManageDiseaseJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageDiseaseActionPerformed

    private void btnManageUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageUsersActionPerformed
        ManageUserAccounts panel = new ManageUserAccounts(userProcessContainer, business);
        userProcessContainer.add("ManageUserAccounts", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnManageUsersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageCDCs;
    private javax.swing.JButton btnManageDisease;
    private javax.swing.JButton btnManageNetworks;
    private javax.swing.JButton btnManageUsers;
    private javax.swing.JButton btnManagevaccines;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel nameJLabel;
    private javax.swing.JTree systemJTree;
    // End of variables declaration//GEN-END:variables
}
