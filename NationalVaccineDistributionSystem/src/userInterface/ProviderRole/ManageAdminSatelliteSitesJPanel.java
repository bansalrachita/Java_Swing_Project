/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.ProviderRole;

import business.ClinicRole.Clinic;
import business.Enterprise.Enterprise;
import business.Organization.ClinicOrganization;
import business.Organization.Organization;
import business.business.Business;
import business.userAccounts.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Rachita
 */
public class ManageAdminSatelliteSitesJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    private ClinicOrganization organization;
    private Business business;
    private Enterprise enterprise;
    
    public ManageAdminSatelliteSitesJPanel(JPanel userProcessContainer,Enterprise enterprise,Business business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.business=business;
         populatecmbClinic();
         nameJLabel.setText(enterprise.getName());
       
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameJLabel = new javax.swing.JLabel();
        cmbProvider = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserJTable = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("       Add Administrator for Registred Sites under");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 40, 549, 46));

        nameJLabel.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        add(nameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(591, 42, 119, 37));

        add(cmbProvider, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 330, 30));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 100, 30));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Select Clinic");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 90, 20));

        UserJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Username", "Password", "Role", "Status", "Employee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(UserJTable);
        if (UserJTable.getColumnModel().getColumnCount() > 0) {
            UserJTable.getColumnModel().getColumn(0).setResizable(false);
            UserJTable.getColumnModel().getColumn(1).setResizable(false);
            UserJTable.getColumnModel().getColumn(2).setResizable(false);
            UserJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 1280, 310));

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAdd.setText("Add Admin>>");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1520, 370, 140, 30));

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnUpdate.setText("Update Admin>>");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1520, 420, 140, 30));

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh>>");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1520, 470, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

     private void populatecmbClinic(){
         cmbProvider.removeAllItems();
        for(Organization o: enterprise.getOrganizationDirectory().getOrganizationList()){
            if(o.getType().getValue().equals(Organization.Type.Clinic.getValue())){
                         cmbProvider.addItem(o);
                
            }
                    
       
        }
    }
    
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        ClinicOrganization o = (ClinicOrganization) cmbProvider.getSelectedItem();
        organization = o;
        AddAdminJPanel panel = new AddAdminJPanel(userProcessContainer, business, organization);
        userProcessContainer.add("AddAdminJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
         populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void populateTable(){
                organization = (ClinicOrganization) cmbProvider.getSelectedItem();
                if(organization != null){
                   // System.out.println("organization.getType()" + organization.getType().getValue());
                  if(organization.getType().getValue().equals(Organization.Type.Clinic.getValue())){
                      DefaultTableModel dtm = (DefaultTableModel) UserJTable.getModel();
                      dtm.setRowCount(0);
                      for(UserAccount user: organization.getUserAccountDirectory().getUserAccountList()){
                      Object[] row = new Object[5];
                      row[0] = user;
                      row[1] = user.getPassword();
                      row[2] = user.getRole();
                      row[3] = user.getStatus();
                      row[4]= user.getEmployee().getName();
                      dtm.addRow(row);
                     }
                  }
                }
                else{
                    JOptionPane.showMessageDialog(null,"Please create a provider.");
                    return;
                }
    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = UserJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select a Row.");
            return;
        }
        else{
        ClinicOrganization o = (ClinicOrganization) cmbProvider.getSelectedItem();
        
        UpdateAdminJPanel panel = new UpdateAdminJPanel(userProcessContainer, o);
        userProcessContainer.add("UpdateAdminJPabel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UserJTable;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbProvider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameJLabel;
    // End of variables declaration//GEN-END:variables
}
