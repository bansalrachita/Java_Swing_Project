/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ProviderRole;

import business.Enterprise.ProviderEnterprise;
import business.Inventory.Batch;
import business.WorkRequest.ProviderWorkRequest;
import business.WorkRequest.ShipmentOrder;
import business.WorkRequest.WorkRequest;
import business.business.Business;
import business.userAccounts.UserAccount;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import java.awt.CardLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Rachita
 */
public class ManageInventoryJPanel extends javax.swing.JPanel implements ActionListener {

    JPanel userProcessContainer;
    private Business business;
    private ProviderEnterprise enterprise;
   // private CDCEnterprise CDC;
    private ShipmentOrder shipRequest;
    private WorkRequest wr;
    UserAccount userAccount;
    public ManageInventoryJPanel(JPanel userProcessContainer, Business business, ProviderEnterprise enterprise,UserAccount userAccount) {
        initComponents();
        this.userAccount=userAccount;
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.enterprise = enterprise;
//        for (Network country : business.getNetworkList()) {
//            for (Enterprise cdc : country.getEnterpriseDirectory().getEnterpriseList()) {
//                for (Network state : country.getNetWorkList()) {
//                    for (Network city : state.getNetWorkList()) {
//                        for (Enterprise e : city.getEnterpriseDirectory().getEnterpriseList()) {
//                            if (e.getName().equals(enterprise.getName())) {
//                                CDC = (CDCEnterprise)cdc;
//                                
//                            }
//                        }
//                    }
//                }
//            }
//        }
      //  populateTable();
        populateShipmentJTable();
        
       
    }

   

    private void populateShipmentJTable(){
        DefaultTableModel dtm = (DefaultTableModel) shipRequestJTable.getModel();
        dtm.setRowCount(0);

        for(WorkRequest request: enterprise.getWorkQueue().getWorkRequestList()){
            if(request!=null && request instanceof ShipmentOrder){
                shipRequest = (ShipmentOrder)request;
                if(shipRequest.getitemOrderRequest() instanceof ProviderWorkRequest){
                    for(Batch batch: shipRequest.getBatchList()){
                        Object[] row = new Object[5];
                        row[0] = shipRequest;
                        row[1] = batch;
                        row[2] = batch.getVaccine().getName();
                        row[3] = batch.getVaccine();
                        row[4] = batch.getVaccine().getQuantity();
                        dtm.addRow(row);
                    }
                }
                
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAddVaccine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VaacineJTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        shipRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnRefresh = new javax.swing.JButton();
        btnClinicReq = new javax.swing.JButton();
        btnPayment = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("     Add Vaccines to the Inventory");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 370, 40));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 100, 30));

        btnAddVaccine.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAddVaccine.setText("Add Order to Inventory>>");
        btnAddVaccine.setEnabled(false);
        btnAddVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVaccineActionPerformed(evt);
            }
        });
        add(btnAddVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 190, 200, 30));

        VaacineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch Number", "vaccine Code", "Vaccine Name", "Vaccine#", "Stock Status", " Cost#", "Std Batch#"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(VaacineJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 720, 160));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("  View Inventory ");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, -1, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Refresh>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 380, 130, 30));

        shipRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ShipmentID", "BatchID", "Vaccine Name", "Vaccine#", "Size# Batch"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(shipRequestJTable);
        if (shipRequestJTable.getColumnModel().getColumnCount() > 0) {
            shipRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            shipRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            shipRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            shipRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            shipRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 720, 150));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("  View Shipped Orders  ");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh>>");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 270, 140, 30));

        btnClinicReq.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnClinicReq.setText("Ship Clinic Orders>>");
        btnClinicReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClinicReqActionPerformed(evt);
            }
        });
        add(btnClinicReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 230, 200, 30));

        btnPayment.setText("PayMent>>");
        btnPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaymentActionPerformed(evt);
            }
        });
        add(btnPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 310, 200, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVaccineActionPerformed

        try{
            int selectedItem = shipRequestJTable.getSelectedRow();
            if(selectedItem<0){
                JOptionPane.showMessageDialog(null,"Please select a row");
            }
            else{
            Batch batch = (Batch) shipRequestJTable.getValueAt(selectedItem, 1);
                System.out.println("batch.getValue()" + batch.getValue());
            if(batch.getValue()!=null && batch.getValue().equals("Added")){
                JOptionPane.showMessageDialog(null,"This order has been added to the inventory");
            }
            else{
                Batch newbatch = enterprise.getProviderInventory().addBatch();
                Batch.counter--;
                newbatch.setBatchNumber(batch.getBatchNumber());
                newbatch.getVaccine().setCode(batch.getVaccine().getCode());
                newbatch.getVaccine().setName(batch.getVaccine().getName());
                newbatch.getVaccine().setDateCreated(time());
                newbatch.getVaccine().setFixedQty(batch.getVaccine().getFixedQty());
                newbatch.getVaccine().setLastUpdated(time());
                newbatch.getVaccine().setPrice(batch.getVaccine().getPrice());
                newbatch.getVaccine().setStock(batch.getVaccine().getStock());
                newbatch.getVaccine().setQuantity(batch.getVaccine().getQuantity());
                newbatch.setValue("Added");
                System.out.println("new batch added" + newbatch.getVaccine());
                JOptionPane.showMessageDialog(null,"New batch added");
                populateTable();
            }
            }
        }
        catch(NumberFormatException | HeadlessException e){
            JOptionPane.showMessageDialog(null,"Please enter Valid values.");
        }
    }//GEN-LAST:event_btnAddVaccineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateShipmentJTable();
        shipRequestJTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                 int selectedItem = shipRequestJTable.getSelectedRow();
       
            ShipmentOrder sr = (ShipmentOrder) shipRequestJTable.getValueAt(selectedItem, 0);
            System.out.println("sr" + sr);
           
            if(sr.getStatus().equalsIgnoreCase("Paid")){
                btnAddVaccine.setEnabled(true);
        }
            }
        } );
        
        
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnClinicReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClinicReqActionPerformed
        // TODO add your handling code here:
        SendClinicOrdersJPanel panel= new SendClinicOrdersJPanel(userProcessContainer, business, enterprise,userAccount);
        userProcessContainer.add("SendClinicOrdersJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnClinicReqActionPerformed

    private void btnPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaymentActionPerformed
        // TODO add your handling code here:
         int selectedItem = shipRequestJTable.getSelectedRow();
         
         if(selectedItem<0){
            JOptionPane.showMessageDialog(null,"Please select a row");
            return;
         }
       
            ShipmentOrder sr = (ShipmentOrder) shipRequestJTable.getValueAt(selectedItem, 0);
        System.out.println("sr" + sr);
           
            if(sr.getStatus()==null){
                BillJPanel panel = new BillJPanel(userProcessContainer,sr);
                userProcessContainer.add("BillJPanel",panel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
        }
             else{
               btnAddVaccine.setEnabled(true);
            JOptionPane.showMessageDialog(null,"Bill is paid. Please proceed with adding the Item.");
            }
        
        
    }//GEN-LAST:event_btnPaymentActionPerformed

    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) VaacineJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("enterprise.getProviderInventory().getBatchList() size :" + enterprise.getProviderInventory().getBatchList().size());
      //  System.out.println("enterprise.getProviderInventory().getBatchList()" + enterprise.getProviderInventory().getBatchList().get(0));
        for(Batch b: enterprise.getProviderInventory().getBatchList()){
            if(b!=null){
                System.out.println("b.getBatchNumber() " + b.getBatchNumber());
            Object[] row = new Object[8];
            row[0] = b.getBatchNumber();
            row[1] = b.getVaccine().getCode();
            row[2] = b.getVaccine().getName();
            row[3] = b.getVaccine().getQuantity();
            row[4] = b.getVaccine().getStock();
            row[5] = b.getVaccine().getPrice() * b.getVaccine().getQuantity();
            row[6] = b.getVaccine().getFixedQty();
            dtm.addRow(row);
            }
            
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable VaacineJTable;
    private javax.swing.JButton btnAddVaccine;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClinicReq;
    private javax.swing.JButton btnPayment;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable shipRequestJTable;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
