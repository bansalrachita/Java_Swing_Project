/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.ProviderRole;

import business.Enterprise.Enterprise;
import business.Enterprise.PHDEnterprise;
import business.order.Order;
import business.order.OrderCatalog;
import business.WorkRequest.ProviderWorkRequest;
import business.WorkRequest.WorkRequest;
import business.network.Network;
import business.userAccounts.UserAccount;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rachita
 */
public class SendShipmentRequestJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private OrderCatalog orderCatalog;
    private Network state;
    
    public SendShipmentRequestJPanel(JPanel userProcessContainer,Enterprise enterprise,UserAccount userAccount,OrderCatalog orderCatalog,Network state) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise=enterprise;
        this.userAccount=userAccount;
        this.orderCatalog=orderCatalog;
        this.state=state;
        populateOrderTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        RequestJTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("     Submit Order Request To Public Health Department");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 590, 40));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 80, 30));

        RequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order", "Sender", "RequestTime", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(RequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 990, 380));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText(" View OrderShipment Request ");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, -1, -1));

        btnSubmit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSubmit.setText("Submit Order Request>>");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 190, 230, 30));

        btnView.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnView.setText("View Requests>>");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        add(btnView, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 360, 230, 30));

        OrderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(OrderJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 990, 80));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText(" Select Order ");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void populateOrderTable(){
         DefaultTableModel dtm = (DefaultTableModel) OrderJTable.getModel();
         dtm.setRowCount(0);
        
        for(Order order : orderCatalog.getOrderList()){
            System.out.println("order" + order.getOrderID());
                
           // for(OrderItem orderItem : order.getOrderitemList()){
               // System.out.println(" get prod "+ orderItem.getProduct());
           //  System.out.println(" getrice " + orderItem.getPrice());
            Object row[] = new Object[1];
            row[0] = order;
            dtm.addRow(row);
            }
       // }
    }
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        int seleectedRow = OrderJTable.getSelectedRow();
        if(seleectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select an order");
            return;
        }
        Order o = (Order) OrderJTable.getValueAt(seleectedRow, 0);

        ProviderWorkRequest request = new ProviderWorkRequest();

        
        for(Enterprise phd: state.getEnterpriseDirectory().getEnterpriseList()){
            for(Network city: state.getNetWorkList()){
                for(Enterprise provider: city.getEnterpriseDirectory().getEnterpriseList()){
                  if (provider.getName().equals(enterprise.getName())) {
                    if (phd instanceof PHDEnterprise) {
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                    enterprise.getWorkQueue().getWorkRequestList().add(request);
                    phd.getWorkQueue().getWorkRequestList().add(request);
                    request.setSender(userAccount);
                    request.setOrginalprovider(enterprise.getName());
                        System.out.println("enterprise.getName()" + enterprise.getName());
                    request.setOrginalprovider(provider.getName());
                    request.setStatus("Pending with" + phd.getName());
                    request.setOrderRequest(o);
                    request.setRequestDate(time());
                    JOptionPane.showMessageDialog(null, "Order Placed Successfully.");
                }  
                  }  
                }
            }
        }
        
     
        populateRequestTable();

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed

        populateRequestTable();
    }//GEN-LAST:event_btnViewActionPerformed

     private void populateRequestTable() {
        DefaultTableModel dtm = (DefaultTableModel) RequestJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("enterprise" + enterprise.getName());
        
        
        for(WorkRequest request: enterprise.getWorkQueue().getWorkRequestList()){
              if (request instanceof ProviderWorkRequest) {
            ProviderWorkRequest shipmentRequest = (ProviderWorkRequest) request;
        if(request != null){
            Object[] row = new Object[5];
         
            row[0] = (shipmentRequest.getOrderRequest().getOrderID()==0 ? null : shipmentRequest.getOrderRequest());
            row[1] = shipmentRequest.getSender();
            row[2] = shipmentRequest.getRequestDate();
            row[3] = shipmentRequest.getReceiver() == null ? "": shipmentRequest.getReceiver();
            row[4] = shipmentRequest.getStatus();
            dtm.addRow(row);
        }
        }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderJTable;
    private javax.swing.JTable RequestJTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
