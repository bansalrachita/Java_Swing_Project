/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.DistributorRole;

import business.Enterprise.Enterprise;
import business.order.Order;
import business.Organization.DistributorOrganization;
import business.Organization.Organization;
import business.WorkRequest.ClinicShipmentWorkRequest;
import business.WorkRequest.ProviderWorkRequest;
import business.WorkRequest.WorkRequest;
import business.business.Business;
import business.userAccounts.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rachita
 */
public class MaangeCDCRequestsJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    private Organization organization;
    private UserAccount userAccount;
    private Business business;
    private Enterprise enterprise;
    WorkRequest request;
    
    
    public MaangeCDCRequestsJPanel(JPanel userProcessContainer,Organization organization,UserAccount userAccount,Business business,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.userAccount = userAccount;
        this.business = business;
        this.enterprise=enterprise;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        CDCRequestJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CDCRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request", "Order ID", "Request Sender", "Request Receiver", "Request Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CDCRequestJTable);
        if (CDCRequestJTable.getColumnModel().getColumnCount() > 0) {
            CDCRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            CDCRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            CDCRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            CDCRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            CDCRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 1050, 390));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("         Manage Vaccine Distribution Requests");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 570, 50));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 140, 30));

        btnAssign.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAssign.setText("Assign To Self>> ");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 210, 200, 30));

        btnProcess.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnProcess.setText("Process>>");
        btnProcess.setEnabled(false);
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 250, 200, 30));

        btnRefresh.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRefresh.setText("Refresh>>");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        add(btnRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 290, 200, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed

        int selectedRow = CDCRequestJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null,"Please select a Order request.");
        }
        
        WorkRequest request = (WorkRequest) CDCRequestJTable.getValueAt(selectedRow,0);
        request.setReceiver(userAccount);
        request.setStatus("inProgress");
        btnProcess.setEnabled(true);
        populateTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
       
        int selectedRow = CDCRequestJTable.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(null,"Please select an Order.");
            return;
        }
        request = (WorkRequest) CDCRequestJTable.getValueAt(selectedRow, 0);
        Order order = (Order) CDCRequestJTable.getValueAt(selectedRow,1);
        ProcessOrderRequestJPanel panel = new ProcessOrderRequestJPanel(userProcessContainer,order,request,enterprise,organization,userAccount,business);
        userProcessContainer.add("ProcessOrderRequestJPanel",panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    public void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) CDCRequestJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("Inside request table");
        if(organization instanceof DistributorOrganization){
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
            if(!request.getStatus().equals("Request Rejected")){
                if(request instanceof ClinicShipmentWorkRequest){
                    ClinicShipmentWorkRequest r = (ClinicShipmentWorkRequest) request;

                    row[0] = r;
                    row[1] =r.getOrderRequest();
                    row[2] = r.getSender();
                    row[3] = r.getReceiver() == null ? null : r.getReceiver();
                    row[4] = r.getStatus();
                }
                else if(request instanceof ProviderWorkRequest){
                    ProviderWorkRequest r = (ProviderWorkRequest) request;
                    row[0] = r;
                    row[1] =r.getOrderRequest();
                    row[2] = r.getSender();
                    row[3] = r.getReceiver() == null ? null : r.getReceiver();
                    row[4] = r.getStatus();
                }
            }
            
            dtm.addRow(row);
        }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CDCRequestJTable;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnProcess;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
