/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface.ClinicRole;

import business.Enterprise.CDCEnterprise;
import business.Enterprise.Enterprise;
import business.Inventory.Batch;
import business.Inventory.Vaccine;
import business.Organization.ClinicOrganization;
import business.Organization.Organization;
import business.WorkRequest.ShipmentOrder;
import business.WorkRequest.WorkRequest;
import business.business.Business;
import business.network.Network;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import java.awt.CardLayout;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rachita
 */
public class ManageInventory extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Business business;
    private ClinicOrganization organization;
    Enterprise enterprise;
   // private Batch batch;
    private ShipmentOrder shipRequest;
    
    public ManageInventory(JPanel userProcessContainer,Business business,ClinicOrganization organization,Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer=userProcessContainer;
        this.business=business;
        this.organization = organization;
        this.enterprise=enterprise;
        
       
        populateTable();
        populateShipmentJTable();
        
        
    }
    
   

    private void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) VaacineJTable.getModel();
        dtm.setRowCount(0);
        System.out.println("enterprise.getProviderInventory().getBatchList() size :" + organization.getClinicInventory().getBatchList().size());
 //       System.out.println("enterprise.getProviderInventory().getBatchList()" + organization.getClinicInventory().getBatchList().get(0));
        for(Batch b: organization.getClinicInventory().getBatchList()){
            if(b!=null){
                System.out.println("b.getBatchNumber();" + b.getBatchNumber());
                System.out.println("value(): " + b.getValue());
                System.out.println("b.getVaccine().getName(): " + b.getVaccine().getName());
            Object[] row = new Object[7];
            row[0] = b.getBatchNumber();
            row[1] = b.getVaccine().getCode();
            row[2] = b.getVaccine().getName();
            row[3] = b.getVaccine().getQuantity();
            row[4] = b.getVaccine().getStock();
            row[5] = b.getVaccine().getPrice() * b.getVaccine().getQuantity();
            row[6] = b.getVaccine().getFixedQty();
            dtm.addRow(row);
            }
            
        }
        
    }
    
    private void populateShipmentJTable(){
        DefaultTableModel dtm = (DefaultTableModel) shipRequestJTable.getModel();
        dtm.setRowCount(0);
        for(WorkRequest request: organization.getWorkQueue().getWorkRequestList()){
            if(request!=null && request instanceof ShipmentOrder){
                shipRequest = (ShipmentOrder)request;
                for(Batch batch: shipRequest.getBatchList()){
                Object[] row = new Object[5];
                row[0] = shipRequest;
                row[1] = batch;
                row[2] = batch.getVaccine().getName();
                row[3] = batch.getVaccine();
                row[4] = batch.getVaccine().getQuantity();
               // row[5] = shipRequest.getStatus();
                //row[6] = shipRequest.getRequest();
                
                    System.out.println("shipRequest.getStatus()" + shipRequest.getStatus());
                dtm.addRow(row);
                }
            }
            
            
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAddVaccine = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        VaacineJTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        shipRequestJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("        Add Vaccines to the Clinic Inventory");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 520, 40));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 100, 30));

        btnAddVaccine.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAddVaccine.setText("Add Order to Inventory>>");
        btnAddVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVaccineActionPerformed(evt);
            }
        });
        add(btnAddVaccine, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 190, 200, 30));

        VaacineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Batch Number", "vaccine Code", "Vaccine Name", "Vaccine#", "Stock Status", " Cost#", "Std Batch#"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(VaacineJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, 720, 160));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("  View Inventory ");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, -1, -1));

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Refresh>>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 380, 130, 30));

        shipRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ShipmentID", "BatchID", "Vaccine Name", "Vaccine#", "Size# Batch"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(shipRequestJTable);
        if (shipRequestJTable.getColumnModel().getColumnCount() > 0) {
            shipRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            shipRequestJTable.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 720, 150));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("  View Shipped Orders  ");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, -1));

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("Refresh>>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 230, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVaccineActionPerformed

        try{
            System.out.println("inside add button");
            int selectedItem = shipRequestJTable.getSelectedRow();
            ShipmentOrder so = (ShipmentOrder) shipRequestJTable.getValueAt(selectedItem, 0);
            
           // String status = (String) shipRequestJTable.getValueAt(selectedItem, 5);
            Batch batch = (Batch) shipRequestJTable.getValueAt(selectedItem, 1);
            if(selectedItem<0){
                JOptionPane.showMessageDialog(null,"Please select a row");
            }
            else {
                if(batch.getValue()!=null && batch.getValue().equals("Added")){
                    JOptionPane.showMessageDialog(null,"This order has been added to the Inventory.");
                    
                }
                else{
                Batch newbatch = organization.getClinicInventory().addBatch();
                newbatch.setBatchNumber(batch.getBatchNumber());
                Batch.counter--;
                newbatch.getVaccine().setCode(batch.getVaccine().getCode());
                newbatch.getVaccine().setName(batch.getVaccine().getName());
                newbatch.getVaccine().setDateCreated(time());
                newbatch.getVaccine().setFixedQty(batch.getVaccine().getFixedQty());
                newbatch.getVaccine().setLastUpdated(time());
                newbatch.getVaccine().setPrice(batch.getVaccine().getPrice());
                newbatch.getVaccine().setStock(Vaccine.Type.InStock);
                newbatch.getVaccine().setQuantity(batch.getVaccine().getQuantity());
                System.out.println("newbatch.getVaccine()name : " + newbatch.getVaccine().getName());               
                batch.setValue("Added");
                System.out.println("batch.setValue: " + batch.getValue());
                //so.setStatus("Added");
                    System.out.println("so.getStatus : "+ so.getStatus());
                JOptionPane.showMessageDialog(null,"New batch added");
                populateTable();
                }
            }
        }
        catch(NumberFormatException | HeadlessException e){
            JOptionPane.showMessageDialog(null,"Please enter Valid values.");
        }
    }//GEN-LAST:event_btnAddVaccineActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateShipmentJTable();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable VaacineJTable;
    private javax.swing.JButton btnAddVaccine;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable shipRequestJTable;
    // End of variables declaration//GEN-END:variables
}
